/* globals Raphael, $ */
const scale = '.323';
const south = '1270';

// Set colors here
const colormap = new Map();
colormap.set('empty', '#333333');
colormap.set('fight', '#FF6900');
colormap.set('ateam', '#0000FF');
colormap.set('bteam', '#FF0000');

const rsr = Raphael('map', '2048', '1256');
rsr.setViewBox(0, 0, 2048, 1256, true);
rsr.canvas.setAttribute('preserveAspectRatio', 'xMidYMid meet');

const regions = [];
let states = [];

const transformfactor = 'S' + scale + ',' + scale + ',0,0 t0,' + south;
regions.push(rsr.path('M3795.01 335.23 3670.66 422.09 3798.99 510.6 4053.57 510.44 4175.57 421.91 4045.27 335.12 3795.01 335.23').transform(transformfactor));
regions.push(rsr.path('M5136.44 1836.22 4977.48 1722.48 4691.32 1723.11 4558.31 1837.46 4714.86 1953.81 5006.74 1953.07 5136.44 1836.22').transform(transformfactor));
regions.push(rsr.path('M2504.95 1842.46 2372.33 1728.27 2084.24 1728.91 1922.92 1843.71 2052.48 1960.52 2346.37 1959.77 2504.95 1842.46').transform(transformfactor));
regions.push(rsr.path('M4261.26 1838.3 4111.04 1724.4 3824.23 1725.04 3681.83 1839.54 3829.43 1956.04 4121.98 1955.3 4261.26 1838.3').transform(transformfactor));
regions.push(rsr.path('M3384.09 1840.37 3242.66 1726.33 2955.21 1726.97 2803.38 1841.62 2941.97 1958.28 3235.19 1957.53 3384.09 1840.37').transform(transformfactor));
regions.push(rsr.path('M4551.67 334.9 4434.47 421.67 4569.59 510.1 4823.66 509.93 4938.4 421.49 4801.45 334.8 4551.67 334.9').transform(transformfactor));
regions.push(rsr.path('M1516.12 336.22 1370.18 423.33 1477.97 512.13 1734.08 511.96 1878.06 423.16 1767.86 336.11 1516.12 336.22').transform(transformfactor));
regions.push(rsr.path('M3036.86 335.56 2905.35 422.5 3026.85 511.11 3281.94 510.94 3411.24 422.32 3287.61 335.45 3036.86 335.56').transform(transformfactor));
regions.push(rsr.path('M1698.81 695.56 1845.83 603.34 1733.87 513.04 1477.44 513.2 1328.39 603.64 1437.83 695.79 1698.81 695.56').transform(transformfactor));
regions.push(rsr.path('M2277.24 335.89 2138.52 422.92 2253.18 511.62 2508.78 511.45 2645.41 422.74 2528.48 335.78 2277.24 335.89').transform(transformfactor));
regions.push(rsr.path('M4555.56 1836.64 4688.58 1722.31 4535.52 1610.69 4252.32 1611.28 4115.85 1723.45 4266.09 1837.32 4555.56 1836.64').transform(transformfactor));
regions.push(rsr.path('M1920.34 1842.88 2081.67 1728.1 1954.5 1616.05 1669.4 1616.65 1505.11 1729.25 1628.91 1843.57 1920.34 1842.88').transform(transformfactor));
regions.push(rsr.path('M1738.35 512.29 1850.34 602.58 2108.88 602.38 2250.45 512.05 2135.81 423.34 1882.3 423.48 1738.35 512.29').transform(transformfactor));
regions.push(rsr.path('M2800.73 1840.79 2952.58 1726.16 2816.74 1614.26 2532.29 1614.85 2377.31 1727.31 2509.96 1841.48 2800.73 1840.79').transform(transformfactor));
regions.push(rsr.path('M3026.5 512.18 2892.41 602.43 3016.1 694.38 3276.02 694.15 3407.8 602.13 3281.9 512.01 3026.5 512.18').transform(transformfactor));
regions.push(rsr.path('M2252.74 512.69 2111.19 603.03 2227.77 695.08 2488.21 694.85 2627.6 602.74 2508.66 512.52 2252.74 512.69').transform(transformfactor));
regions.push(rsr.path('M3679.13 1838.71 3821.55 1724.23 3677.08 1612.48 3393.26 1613.07 3247.55 1725.38 3389.02 1839.4 3679.13 1838.71').transform(transformfactor));
regions.push(rsr.path('M1662.18 886.24 1812.36 790.42 1698.59 696.67 1437.29 696.91 1284.99 790.85 1396.14 886.55 1662.18 886.24').transform(transformfactor));
regions.push(rsr.path('M2513.06 511.77 2632.04 601.98 2890.07 601.78 3024.16 511.54 2902.68 422.92 2649.66 423.06 2513.06 511.77').transform(transformfactor));
regions.push(rsr.path('M3286.25 511.27 3412.18 601.37 3669.68 601.17 3796.33 511.03 3668.03 422.51 3415.51 422.64 3286.25 511.27').transform(transformfactor));
regions.push(rsr.path('M4057.89 510.76 4190.74 600.77 4447.74 600.57 4566.97 510.53 4431.87 422.09 4179.86 422.23 4057.89 510.76').transform(transformfactor));
regions.push(rsr.path('M1500.31 1728.85 1664.65 1616.25 1543.02 1506.54 1260.21 1507.09 1093.43 1617.31 1211.94 1729.49 1500.31 1728.85').transform(transformfactor));
regions.push(rsr.path('M4994.06 787.53 4875.45 882.94 5021.07 979.88 5287.49 979.54 5403.03 882.45 5255.15 787.27 4994.06 787.53').transform(transformfactor));
regions.push(rsr.path('M5021.23 981.05 4900.57 1080.25 5049.32 1181.01 5321 1180.6 5438.47 1079.61 5287.38 980.71 5021.23 981.05').transform(transformfactor));
regions.push(rsr.path('M5078.88 1391.55 4953.88 1499.03 5109.3 1608.18 5392.17 1607.59 5513.7 1498.08 5355.76 1391.05 5078.88 1391.55').transform(transformfactor));
regions.push(rsr.path('M5109.49 1609.5 4982.2 1721.52 5141.19 1835.25 5430 1834.57 5553.67 1720.38 5392.07 1608.91 5109.49 1609.5').transform(transformfactor));
regions.push(rsr.path('M4967.9 601.25 4851.28 693.08 4993.9 786.4 5255.26 786.14 5368.93 692.72 5224.12 601.05 4967.9 601.25').transform(transformfactor));
regions.push(rsr.path('M5049.48 1182.24 4926.69 1285.45 5078.71 1390.28 5355.87 1389.78 5475.34 1284.66 5320.9 1181.82 5049.48 1182.24').transform(transformfactor));
regions.push(rsr.path('M3291.87 334.73 3415.54 421.59 3668.3 421.45 3792.66 334.61 3666.71 249.24 3418.75 249.32 3291.87 334.73').transform(transformfactor));
regions.push(rsr.path('M4049.46 334.4 4179.79 421.18 4432.07 421.04 4549.29 334.29 4416.78 249 4169.31 249.08 4049.46 334.4').transform(transformfactor));
regions.push(rsr.path('M4805.58 334.08 4942.55 420.76 5194.34 420.63 5304.43 333.96 5165.41 248.76 4918.41 248.84 4805.58 334.08').transform(transformfactor));
regions.push(rsr.path('M4942.7 421.81 4828 510.25 4967.75 600.17 5224.23 599.97 5336.08 510.02 5194.23 421.67 4942.7 421.81').transform(transformfactor));
regions.push(rsr.path('M1624.1 1084.45 1777.59 984.8 1661.95 887.4 1395.59 887.71 1239.9 985.37 1352.81 1084.82 1624.1 1084.45').transform(transformfactor));
regions.push(rsr.path('M1543.27 1505.23 1703.82 1397.22 1584.25 1291.87 1307.15 1292.33 1144.24 1398.11 1260.82 1505.78 1543.27 1505.23').transform(transformfactor));
regions.push(rsr.path('M5469.46 2071.3 5595.33 1952.15 5429.89 1835.94 5141.38 1836.63 5011.73 1953.48 5174.45 2072.09 5469.46 2071.3').transform(transformfactor));
regions.push(rsr.path('M1584.49 1290.61 1741.44 1186.91 1623.87 1085.65 1352.24 1086.03 1193.02 1187.63 1307.75 1291.07 1584.49 1290.61').transform(transformfactor));
regions.push(rsr.path('M1455.52 1962.02 1623.81 1844.55 1500.05 1730.21 1211.31 1730.85 1040.47 1845.8 1160.96 1962.76 1455.52 1962.02').transform(transformfactor));
regions.push(rsr.path('M3798.72 511.67 3672.07 601.83 3802.84 693.68 4062.23 693.44 4186.44 601.53 4053.62 511.51 3798.72 511.67').transform(transformfactor));
regions.push(rsr.path('M1884.17 2080.89 2049.33 1961.09 1919.8 1844.27 1628.66 1844.96 1460.42 1962.44 1586.43 2081.69 1884.17 2080.89').transform(transformfactor));
regions.push(rsr.path('M3680.95 2076.09 3826.38 1956.61 3678.81 1840.1 3388.99 1840.78 3240.13 1957.95 3384.58 2076.88 3680.95 2076.09').transform(transformfactor));
regions.push(rsr.path('M4576.23 2073.7 4711.86 1954.38 4555.34 1838.02 4266.17 1838.7 4126.95 1955.71 4280.54 2074.49 4576.23 2073.7').transform(transformfactor));
regions.push(rsr.path('M2783.6 2078.49 2938.87 1958.84 2800.3 1842.18 2509.83 1842.87 2351.3 1960.19 2486.55 2079.28 2783.6 2078.49').transform(transformfactor));
regions.push(rsr.path('M2444.65 1083.3 2589.9 983.77 2466.72 886.49 2200.91 886.79 2053.32 984.34 2173.94 1083.68 2444.65 1083.3').transform(transformfactor));
regions.push(rsr.path('M3256.79 1289.09 2980.88 1289.55 2835.46 1395.07 2968.71 1502.48 3249.91 1501.94 3392.63 1394.19 3256.79 1289.09').transform(transformfactor));
regions.push(rsr.path('M2421.43 1290.48 2144.91 1290.94 1990.76 1396.59 2115.7 1504.13 2397.53 1503.58 2549.15 1395.7 2421.43 1290.48').transform(transformfactor));
regions.push(rsr.path('M2421.56 1289.22 2569.93 1185.64 2444.52 1084.51 2173.46 1084.88 2022.66 1186.37 2145.4 1289.68 2421.56 1289.22').transform(transformfactor));
regions.push(rsr.path('M2532.81 335.06 2649.76 422.01 2903.04 421.87 3034.57 334.94 2915.19 249.48 2666.75 249.56 2532.81 335.06').transform(transformfactor));
regions.push(rsr.path('M4090.37 1287.71 3815.05 1288.16 3678.31 1393.56 3819.84 1500.83 4100.43 1500.29 4234.3 1392.68 4090.37 1287.71').transform(transformfactor));
regions.push(rsr.path('M4213.97 982.07 4085.16 1081.38 4226.18 1182.27 4498.44 1181.86 4624.19 1080.75 4480.67 981.74 4213.97 982.07').transform(transformfactor));
regions.push(rsr.path('M3802.57 694.79 3673.54 788.43 3806.85 883.8 4071.23 883.5 4197.72 788 4062.28 694.56 3802.57 694.79').transform(transformfactor));
regions.push(rsr.path('M4202.17 788.34 4075.72 883.85 4213.91 980.9 4480.88 980.56 4604.39 883.36 4463.79 788.07 4202.17 788.34').transform(transformfactor));
regions.push(rsr.path('M2594.52 982.94 2862.61 982.6 3002.15 885.18 2876.22 789.69 2613.52 789.96 2471.3 885.67 2594.52 982.94').transform(transformfactor));
regions.push(rsr.path('M4226.25 1183.49 4094.98 1286.83 4238.95 1391.79 4516.71 1391.29 4644.8 1286.04 4498.23 1183.08 4226.25 1183.49').transform(transformfactor));
regions.push(rsr.path('M3263.44 1083.36 2992.96 1083.74 2850.55 1185.1 2981.27 1288.3 3256.83 1287.84 3396.65 1184.39 3263.44 1083.36').transform(transformfactor));
regions.push(rsr.path('M4080.64 1082.22 3810.72 1082.6 3676.66 1183.84 3815.34 1286.91 4090.31 1286.46 4221.62 1183.12 4080.64 1082.22').transform(transformfactor));
regions.push(rsr.path('M3806.57 884.96 3675.07 982.29 3811.01 1081.4 4080.58 1081.02 4209.44 981.72 4071.28 884.66 3806.57 884.96').transform(transformfactor));
regions.push(rsr.path('M3405.06 981.92 3672.58 981.58 3804.09 884.27 3670.82 788.88 3408.66 789.15 3274.34 884.76 3405.06 981.92').transform(transformfactor));
regions.push(rsr.path('M2574.64 1184.79 2848.06 1184.37 2990.49 1083.02 2862.22 983.79 2594.4 984.13 2449.2 1083.67 2574.64 1184.79').transform(transformfactor));
regions.push(rsr.path('M3401.29 1183.52 3674.12 1183.11 3808.2 1081.88 3672.29 982.76 3405.03 983.1 3268.04 1082.52 3401.29 1183.52').transform(transformfactor));
regions.push(rsr.path('M2832.93 1394.31 2978.36 1288.8 2847.67 1185.6 2574.52 1186.01 2426.19 1289.6 2553.96 1394.81 2832.93 1394.31').transform(transformfactor));
regions.push(rsr.path('M3015.74 695.49 2878.99 789.23 3004.94 884.72 3269.87 884.42 3404.22 788.81 3275.98 695.26 3015.74 695.49').transform(transformfactor));
regions.push(rsr.path('M3675.73 1392.79 3812.47 1287.42 3673.83 1184.34 3401.26 1184.75 3261.48 1288.21 3397.36 1393.3 3675.73 1392.79').transform(transformfactor));
regions.push(rsr.path('M3004.57 885.87 2865.04 983.31 2993.33 1082.54 3263.48 1082.16 3400.51 982.75 3269.84 885.57 3004.57 885.87').transform(transformfactor));
regions.push(rsr.path('M2613.64 788.82 2876.6 788.55 3013.36 694.83 2889.7 602.87 2631.93 603.07 2492.58 695.19 2613.64 788.82').transform(transformfactor));
regions.push(rsr.path('M3249.87 1503.24 2968.31 1503.78 2819.75 1613.73 2955.62 1725.62 3242.71 1724.98 3388.45 1612.67 3249.87 1503.24').transform(transformfactor));
regions.push(rsr.path('M4100.49 1501.59 3819.55 1502.14 3680.04 1611.94 3824.54 1723.69 4110.98 1723.05 4247.5 1610.89 4100.49 1501.59').transform(transformfactor));
regions.push(rsr.path('M2397.38 1504.89 2115.2 1505.43 1957.55 1615.52 2084.76 1727.55 2372.48 1726.91 2527.51 1614.46 2397.38 1504.89').transform(transformfactor));
regions.push(rsr.path('M1669.64 1615.32 1955.02 1614.72 2112.68 1504.65 1987.78 1397.1 1708.48 1397.6 1547.97 1505.62 1669.64 1615.32').transform(transformfactor));
regions.push(rsr.path('M1708.72 1396.33 1988.29 1395.82 2142.45 1290.19 2019.75 1186.86 1746.01 1187.28 1589.11 1290.99 1708.72 1396.33').transform(transformfactor));
regions.push(rsr.path('M4949.26 1499.95 4668.92 1500.49 4538.43 1610.16 4691.51 1721.76 4977.32 1721.13 5104.64 1609.11 4949.26 1499.95').transform(transformfactor));
regions.push(rsr.path('M4871.09 883.74 4606.91 884.05 4483.42 981.26 4626.96 1080.26 4895.97 1079.89 5016.68 980.7 4871.09 883.74').transform(transformfactor));
regions.push(rsr.path('M4922.15 1286.32 4647.43 1286.78 4519.35 1392.05 4669.12 1499.19 4949.09 1498.65 5074.14 1391.17 4922.15 1286.32').transform(transformfactor));
regions.push(rsr.path('M4847 693.85 4587.8 694.09 4466.48 787.62 4607.1 882.89 4870.94 882.59 4989.59 787.2 4847 693.85').transform(transformfactor));
regions.push(rsr.path('M4896.12 1081.08 4626.77 1081.46 4501.03 1182.59 4647.62 1285.53 4922 1285.08 5044.84 1181.87 4896.12 1081.08').transform(transformfactor));
regions.push(rsr.path('M1746.23 1186.05 2020.24 1185.63 2171.04 1084.16 2050.46 984.81 1782.08 985.15 1628.62 1084.81 1746.23 1186.05').transform(transformfactor));
regions.push(rsr.path('M4202.1 787.21 4463.99 786.94 4585.33 693.42 4447.53 601.66 4190.8 601.86 4066.64 693.78 4202.1 787.21').transform(transformfactor));
regions.push(rsr.path('M3677.4 1611.15 3816.92 1501.36 3675.42 1394.07 3397.34 1394.57 3254.66 1502.32 3393.27 1611.74 3677.4 1611.15').transform(transformfactor));
regions.push(rsr.path('M4535.73 1609.37 4666.24 1499.72 4516.5 1392.56 4239.02 1393.06 4105.2 1500.68 4252.24 1609.96 4535.73 1609.37').transform(transformfactor));
regions.push(rsr.path('M2227.31 696.2 2082.81 790.04 2201.37 885.63 2466.85 885.33 2609.11 789.61 2488.09 695.97 2227.31 696.2').transform(transformfactor));
regions.push(rsr.path('M2817.17 1612.93 2965.74 1503.01 2832.52 1395.58 2553.83 1396.09 2402.25 1503.97 2532.42 1613.52 2817.17 1612.93').transform(transformfactor));
regions.push(rsr.path('M1782.29 983.97 2050.94 983.63 2198.54 886.1 2079.99 790.5 1816.76 790.76 1666.61 886.59 1782.29 983.97').transform(transformfactor));
regions.push(rsr.path('M3408.68 788.01 3671.1 787.75 3800.14 694.12 3669.4 602.26 3412.15 602.46 3280.41 694.48 3408.68 788.01').transform(transformfactor));
regions.push(rsr.path('M1816.96 789.63 2080.47 789.36 2224.99 695.53 2108.43 603.47 1850.14 603.67 1703.16 695.89 1816.96 789.63').transform(transformfactor));
regions.push(rsr.path('M4823.8 511 4569.4 511.17 4450.18 601.22 4587.99 692.97 4846.86 692.74 4963.51 600.93 4823.8 511').transform(transformfactor));
regions.push(rsr.path('M907.79 696.26 1062.49 603.95 957.53 513.55 700.59 513.72 543.83 604.35 645.99 696.5 907.79 696.26').transform(transformfactor));
regions.push(rsr.path('M626.17 1730.79 799.87 1618.05 686.77 1508.2 403.34 1508.75 227.19 1619.24 336.82 1731.43 626.17 1730.79').transform(transformfactor));
regions.push(rsr.path('M687.13 1506.89 856.66 1398.74 745.28 1293.26 467.58 1293.72 295.67 1399.75 403.73 1507.44 687.13 1506.89').transform(transformfactor));
regions.push(rsr.path('M801.81 1085.59 963.59 985.83 855.51 888.32 588.59 888.63 424.59 986.51 529.64 1085.97 801.81 1085.59').transform(transformfactor));
regions.push(rsr.path('M855.83 887.16 1013.99 791.23 907.49 697.38 645.65 697.62 485.35 791.77 588.94 887.47 855.83 887.16').transform(transformfactor));
regions.push(rsr.path('M3791.69 164.11 4037.17 164.05 4154.99 81.77 4029.44 .95 3787.98 .95 3667.97 81.73 3791.69 164.11').transform(transformfactor));
regions.push(rsr.path('M924.21 2333.69 619.46 2334.61 432.07 2463.02 552.57 2593.34 864.55 2592.3 1048.81 2461.22 924.21 2333.69').transform(transformfactor));
regions.push(rsr.path('M1408.48 2206.87 1107.08 2207.72 927.53 2333.08 1052.16 2460.59 1359.93 2459.62 1536.72 2331.4 1408.48 2206.87').transform(transformfactor));
regions.push(rsr.path('M1158.62 249.03 1408.28 248.95 1551.25 164.98 1446.66 82.35 1201.7 82.38 1056.6 164.99 1158.62 249.03').transform(transformfactor));
regions.push(rsr.path('M1913.47 248.79 2162.64 248.71 2298.64 164.82 2187.66 82.28 1943.17 82.3 1804.94 164.83 1913.47 248.79').transform(transformfactor));
regions.push(rsr.path('M957.82 512.47 1109.19 423.58 1005.74 336.44 753.51 336.54 600.14 423.85 700.91 512.64 957.82 512.47').transform(transformfactor));
regions.push(rsr.path('M2301.27 164.42 2547.7 164.37 2679.12 81.93 2566.02 .95 2323.64 .95 2190.27 81.88 2301.27 164.42').transform(transformfactor));
regions.push(rsr.path('M3047.2 164.26 3293.15 164.21 3417.76 81.85 3298.42 .95 3056.5 .95 2929.83 81.81 3047.2 164.26').transform(transformfactor));
regions.push(rsr.path('M3418.78 248.31 3666.98 248.22 3789.13 164.5 3665.44 82.12 3421.88 82.14 3297.3 164.51 3418.78 248.31').transform(transformfactor));
regions.push(rsr.path('M2666.85 248.55 2915.54 248.47 3044.6 164.66 2927.25 82.2 2683.23 82.22 2551.83 164.67 2666.85 248.55').transform(transformfactor));
regions.push(rsr.path('M1006.02 335.4 1154.21 249.74 1052.22 165.68 804.54 165.74 654.41 249.9 753.82 335.51 1006.02 335.4').transform(transformfactor));
regions.push(rsr.path('M1052.5 164.68 1197.63 82.08 1097.07 .95 853.77 .95 706.75 82.13 804.84 164.74 1052.5 164.68').transform(transformfactor));
regions.push(rsr.path('M1845.81 2330.93 1541.79 2331.84 1365.05 2460.07 1495.69 2590.2 1806.91 2589.16 1980.33 2458.27 1845.81 2330.93').transform(transformfactor));
regions.push(rsr.path('M1553.92 164.58 1800.82 164.53 1939.08 82 1832.24 .95 1589.4 .95 1449.3 81.96 1553.92 164.58').transform(transformfactor));
regions.push(rsr.path('M745.62 1292 911.19 1188.18 801.48 1086.8 529.28 1087.18 361.41 1189.01 467.96 1292.46 745.62 1292').transform(transformfactor));
regions.push(rsr.path('M5916.92 1390.05 5800.71 1497.4 5964.47 1606.4 6246.71 1605.81 6359.44 1496.31 6193.52 1389.55 5916.92 1390.05').transform(transformfactor));
regions.push(rsr.path('M6066.61 2071.15 5944.46 2192.98 6120.56 2316.62 6421.32 2315.72 6539.47 2191.3 6360.97 2070.36 6066.61 2071.15').transform(transformfactor));
regions.push(rsr.path('M5964.76 1607.73 5846.63 1719.6 6014.31 1833.18 6302.46 1832.5 6416.95 1718.33 6247.03 1607.14 5964.76 1607.73').transform(transformfactor));
regions.push(rsr.path('M6014.62 1834.56 5894.51 1951.26 6066.29 2069.71 6360.61 2068.92 6476.91 1949.79 6302.8 1833.88 6014.62 1834.56').transform(transformfactor));
regions.push(rsr.path('M5826.82 980.03 5714.26 1079.11 5870.7 1179.76 6141.81 1179.35 6251.17 1078.37 6092.71 979.7 5826.82 980.03').transform(transformfactor));
regions.push(rsr.path('M5870.98 1180.98 5756.62 1284.07 5916.64 1388.77 6193.2 1388.28 6304.22 1283.16 6142.11 1180.57 5870.98 1180.98').transform(transformfactor));
regions.push(rsr.path('M5784.33 786.73 5673.53 882.03 5826.56 978.86 6092.42 978.52 6200.15 881.43 6045.18 786.47 5784.33 786.73').transform(transformfactor));
regions.push(rsr.path('M5704.04 421.39 5596.59 509.75 5743.19 599.56 5999.16 599.37 6103.78 509.41 5955.35 421.26 5704.04 421.39').transform(transformfactor));
regions.push(rsr.path('M1772.25 335.38 1882.48 422.42 2136.26 422.29 2274.99 335.27 2162.2 249.72 1913.29 249.8 1772.25 335.38').transform(transformfactor));
regions.push(rsr.path('M5743.44 600.65 5634.33 692.38 5784.08 785.6 6044.9 785.34 6151.06 691.91 5999.43 600.45 5743.44 600.65').transform(transformfactor));
regions.push(rsr.path('M2765.25 2328.18 2461.94 2329.09 2295.79 2457.13 2436.53 2587.07 2747 2586.04 2909.62 2455.34 2765.25 2328.18').transform(transformfactor));
regions.push(rsr.path('M3682.5 2325.43 3379.91 2326.34 3224.32 2454.2 3375.1 2583.95 3684.82 2582.92 3836.69 2452.41 3682.5 2325.43').transform(transformfactor));
regions.push(rsr.path('M4133.52 2199.14 3834.23 2199.99 3685.66 2324.82 3839.87 2451.79 4145.44 2450.82 4290.59 2323.15 4133.52 2199.14').transform(transformfactor));
regions.push(rsr.path('M3227.3 2201.71 2927.3 2202.56 2768.45 2327.57 2912.86 2454.72 3219.16 2453.75 3374.8 2325.89 3227.3 2201.71').transform(transformfactor));
regions.push(rsr.path('M2318.96 2204.29 2018.25 2205.14 1849.08 2330.32 1983.62 2457.65 2290.66 2456.68 2456.85 2328.65 2318.96 2204.29').transform(transformfactor));
regions.push(rsr.path('M5510.56 2319.95 5209.38 2320.86 5074.73 2448.35 5245.46 2577.72 5553.69 2576.7 5684.21 2446.58 5510.56 2319.95').transform(transformfactor));
regions.push(rsr.path('M4597.61 2322.69 4295.72 2323.59 4150.63 2451.27 4311.4 2580.83 4620.38 2579.8 4761.55 2449.49 4597.61 2322.69').transform(transformfactor));
regions.push(rsr.path('M6120.89 2318.13 5996.64 2445.44 6177.26 2574.62 6484.75 2573.6 6604.81 2443.52 6421.69 2317.23 6120.89 2318.13').transform(transformfactor));
regions.push(rsr.path('M5939.64 2194.02 5641.73 2194.86 5513.6 2319.34 5687.29 2445.95 5991.4 2444.99 6115.7 2317.68 5939.64 2194.02').transform(transformfactor));
regions.push(rsr.path('M5037.63 2196.58 4739.03 2197.42 4600.7 2322.07 4764.68 2448.87 5069.52 2447.9 5204.22 2320.41 5037.63 2196.58').transform(transformfactor));
regions.push(rsr.path('M5842 1720.55 5556.46 1721.19 5432.82 1835.39 5598.28 1951.58 5889.49 1950.84 6009.64 1834.16 5842 1720.55').transform(transformfactor));
regions.push(rsr.path('M5169.6 2073.11 5006.92 1954.48 4714.67 1955.22 4579.06 2074.56 4739.22 2195.95 5037.45 2195.1 5169.6 2073.11').transform(transformfactor));
regions.push(rsr.path('M6061.53 2070.72 5889.78 1952.25 5598.19 1952.99 5472.34 2072.16 5641.8 2193.39 5939.34 2192.55 6061.53 2070.72').transform(transformfactor));
regions.push(rsr.path('M2481.42 2080.3 2346.21 1961.19 2051.95 1961.93 1886.8 2081.76 2018.8 2203.65 2319.12 2202.8 2481.42 2080.3').transform(transformfactor));
regions.push(rsr.path('M4275.6 2075.5 4122.04 1956.71 3829.12 1957.45 3683.7 2076.95 3834.53 2198.51 4133.45 2197.66 4275.6 2075.5').transform(transformfactor));
regions.push(rsr.path('M3379.54 2077.9 3235.14 1958.95 2941.56 1959.69 2786.29 2079.35 2927.73 2201.08 3227.35 2200.23 3379.54 2077.9').transform(transformfactor));
regions.push(rsr.path('M5669.24 882.83 5405.61 883.13 5290.08 980.24 5441.19 1079.13 5709.64 1078.75 5822.23 979.68 5669.24 882.83').transform(transformfactor));
regions.push(rsr.path('M5709.89 1079.95 5441.1 1080.32 5323.65 1181.33 5478.11 1284.16 5751.91 1283.7 5866.3 1180.62 5709.89 1079.95').transform(transformfactor));
regions.push(rsr.path('M5796.17 1498.31 5516.44 1498.85 5394.93 1608.38 5556.55 1719.84 5841.72 1719.21 5959.89 1607.33 5796.17 1498.31').transform(transformfactor));
regions.push(rsr.path('M5752.16 1284.95 5478.02 1285.4 5358.57 1390.54 5516.53 1497.55 5795.9 1497.01 5912.15 1389.67 5752.16 1284.95').transform(transformfactor));
regions.push(rsr.path('M4169.25 248.07 4416.98 247.99 4532.23 164.35 4402.22 82.04 4159.13 82.07 4041.34 164.35 4169.25 248.07').transform(transformfactor));
regions.push(rsr.path('M968.36 985 1237.57 984.66 1393.26 887.01 1282.14 791.31 1018.36 791.57 860.24 887.51 968.36 985').transform(transformfactor));
regions.push(rsr.path('M1018.65 790.44 1282.7 790.17 1435.01 696.24 1325.59 604.08 1066.78 604.28 912.13 696.6 1018.65 790.44').transform(transformfactor));
regions.push(rsr.path('M916.05 1187.31 1190.65 1186.89 1349.88 1085.31 1236.99 985.84 968.05 986.19 806.31 1085.95 916.05 1187.31').transform(transformfactor));
regions.push(rsr.path('M1581.2 2082.71 1455.25 1963.44 1160.31 1964.18 985.22 2084.17 1107.75 2206.24 1408.77 2205.38 1581.2 2082.71').transform(transformfactor));
regions.push(rsr.path('M1067.06 603.19 1326.13 602.99 1475.2 512.56 1367.43 423.76 1113.41 423.9 962.08 512.8 1067.06 603.19').transform(transformfactor));
regions.push(rsr.path('M1010.2 335.71 1113.68 422.84 1367.96 422.7 1513.92 335.59 1407.76 249.96 1158.36 250.04 1010.2 335.71').transform(transformfactor));
regions.push(rsr.path('M861.63 1397.85 1141.82 1397.34 1304.74 1291.58 1190.05 1188.12 915.74 1188.54 750.21 1292.38 861.63 1397.85').transform(transformfactor));
regions.push(rsr.path('M745.86 1845.66 1037.95 1844.97 1208.8 1730.04 1090.33 1617.85 804.6 1618.44 630.95 1731.19 745.86 1845.66').transform(transformfactor));
regions.push(rsr.path('M684.22 2084.1 982.65 2083.31 1157.75 1963.33 1037.3 1846.36 745.5 1847.05 567.5 1964.69 684.22 2084.1').transform(transformfactor));
regions.push(rsr.path('M804.94 1617.11 1090.96 1616.52 1257.75 1506.31 1141.2 1398.62 861.3 1399.12 691.81 1507.28 804.94 1617.11').transform(transformfactor));
regions.push(rsr.path('M5630.12 693.15 5371.45 693.38 5257.8 786.82 5405.7 881.98 5669 881.68 5779.84 786.39 5630.12 693.15').transform(transformfactor));
regions.push(rsr.path('M4597.82 2321.18 4736.17 2196.55 4576.02 2075.13 4280.64 2075.92 4138.53 2198.1 4295.64 2322.09 4597.82 2321.18').transform(transformfactor));
regions.push(rsr.path('M5510.65 2318.45 5638.81 2193.99 5469.36 2072.74 5174.66 2073.53 5042.55 2195.54 5209.17 2319.35 5510.65 2318.45').transform(transformfactor));
regions.push(rsr.path('M4534.76 163.95 4779.76 163.9 4890.83 81.69 4759.09 .95 4518.08 .95 4404.73 81.65 4534.76 163.95').transform(transformfactor));
regions.push(rsr.path('M3682.84 2323.92 3831.43 2199.11 3680.62 2077.53 3384.55 2078.33 3232.4 2200.67 3379.95 2324.83 3682.84 2323.92').transform(transformfactor));
regions.push(rsr.path('M5912.87 248.52 5666.07 248.6 5560.22 333.75 5703.81 420.35 5955.1 420.21 6058.22 333.54 5912.87 248.52').transform(transformfactor));
regions.push(rsr.path('M5592.45 510.49 5338.56 510.66 5226.72 600.62 5371.55 692.28 5629.89 692.04 5739.03 600.33 5592.45 510.49').transform(transformfactor));
regions.push(rsr.path('M4918.27 247.83 5165.52 247.75 5273.91 164.19 5137.61 81.96 4894.98 81.99 4783.95 164.2 4918.27 247.83').transform(transformfactor));
regions.push(rsr.path('M5276.4 163.79 5520.94 163.74 5625.26 81.61 5487.37 .95 5246.8 .95 5140.08 81.57 5276.4 163.79').transform(transformfactor));
regions.push(rsr.path('M5665.84 247.59 5912.62 247.51 6014.29 163.94 5871.88 81.88 5629.44 81.91 5525.14 164.04 5665.84 247.59').transform(transformfactor));
regions.push(rsr.path('M2765.71 2326.67 2924.57 2201.68 2783.16 2079.94 2486.4 2080.73 2324.15 2203.24 2462.09 2327.57 2765.71 2326.67').transform(transformfactor));
regions.push(rsr.path('M4534.57 164.94 4419.33 248.59 4551.85 333.87 4801.31 333.76 4914.18 248.53 4779.89 164.89 4534.57 164.94').transform(transformfactor));
regions.push(rsr.path('M3791.43 165.1 3669.29 248.84 3795.27 334.2 4045.22 334.09 4165.1 248.77 4037.21 165.05 3791.43 165.1').transform(transformfactor));
regions.push(rsr.path('M3046.86 165.26 2917.8 249.08 3037.21 334.52 3287.65 334.42 3414.56 249.01 3293.12 165.2 3046.86 165.26').transform(transformfactor));
regions.push(rsr.path('M5276.29 164.78 5167.92 248.35 5306.96 333.55 5555.94 333.44 5661.82 248.29 5521.15 164.73 5276.29 164.78').transform(transformfactor));
regions.push(rsr.path('M924.9 2332.18 1104.48 2206.84 981.98 2084.76 683.84 2085.56 501.26 2208.41 619.84 2333.09 924.9 2332.18').transform(transformfactor));
regions.push(rsr.path('M5556.15 334.47 5306.86 334.58 5196.78 421.26 5338.66 509.59 5592.23 509.42 5699.72 421.08 5556.15 334.47').transform(transformfactor));
regions.push(rsr.path('M1846.4 2329.42 2015.58 2204.25 1883.61 2082.34 1586.16 2083.14 1413.77 2205.82 1542.06 2330.33 1846.4 2329.42').transform(transformfactor));
regions.push(rsr.path('M1553.42 165.58 1410.45 249.56 1516.63 335.18 1768.06 335.07 1909.13 249.49 1800.63 165.52 1553.42 165.58').transform(transformfactor));
regions.push(rsr.path('M2300.85 165.42 2164.86 249.32 2277.66 334.85 2528.59 334.74 2662.57 249.25 2547.59 165.36 2300.85 165.42').transform(transformfactor));

for (let i = 0; i < regions.length; i++) {
  regions[i].attr({ class: 'hexagon old' });
  states.push('empty');
}

function drawMap() {
  for (let i = 0; i < regions.length; i++) {
    regions[i].attr({ fill: colormap.get(states[i]) });
  }
}

function updateState(i) {
  if (states[i] === 'empty') {
    states[i] = 'fight';
  } else if (states[i] === 'fight') {
    states[i] = 'ateam';
  } else if (states[i] === 'ateam') {
    states[i] = 'bteam';
  } else if (states[i] === 'bteam') {
    states[i] = 'empty';
  }
  regions[i].attr({ class: 'hexagon new' });
  drawMap();
}

function save() {
  localStorage.setItem('states', states);
}

function load() {
  states = localStorage.getItem('states').split(',');
  drawMap();
}

function reset() {
  for (let i = 0; i < regions.length; i++) {
    regions[i].attr({ class: 'hexagon old' });
    states[i] = 'empty';
  }
  drawMap();
}

function newRound() {
  for (let i = 0; i < regions.length; i++) {
    regions[i].attr({ class: 'hexagon old' });
  }
}


// Connect event listeners
for (let i = 0; i < regions.length; i++) {
  (function (j) {
    $(regions[j].node).click(function () { updateState(j); });
  }(i));
}

drawMap();
